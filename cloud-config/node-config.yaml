#cloud-config
---
hostname: <HOSTNAME> 
users:
  - name: core
    ssh-authorized-keys: 
      - <SSH_PUBLIC_KEY> 
    groups: 
      - sudo
    shell: /bin/bash

write_files:
  - path: /etc/other-environment 
    owner: root
    permissions: 0755
    content: |      
      # Location from which to download the Kubernetes binaries
      KUBERNETES_LOC=<KUBERNETES_LOC>

      # The kubernetes master IP
      KUBERNETES_MASTER=<KUBERNETES_MASTER>

      # Location of etcd cluster used by Calico.
      ETCD_AUTHORITY=<KUBERNETES_MASTER>:4001

      # The kubernetes-apiserver location - used by the calico plugin
      KUBE_API_ROOT=http://<KUBERNETES_MASTER>:8080/api/v1/

      # Location of the calicoctl binary - used by the calico plugin
      CALICOCTL_PATH=/home/core/calicoctl

  - path: /home/core/kubernetes-download.sh
    owner: root
    permissions: 0755
    content: |
      #! /usr/bin/bash
      # Network not always up, ping to wait for internet connection
      while ! ping -c 1 $KUBERNETES_LOC; do :; done
      # Download kubernetes binaries
      /usr/bin/wget -N -P "/home/core" "http://$KUBERNETES_LOC/kubectl"
      /usr/bin/wget -N -P "/home/core" "http://$KUBERNETES_LOC/kubernetes"
      /usr/bin/wget -N -P "/home/core" "http://$KUBERNETES_LOC/kube-proxy"
      /usr/bin/wget -N -P "/home/core" "http://$KUBERNETES_LOC/kubelet"
      sudo chmod +x /home/core/*

  - path: /home/core/calico-node.sh
    owner: root
    permissions: 0755
    content: |
      #! /usr/bin/bash
      # Usage: calico-node.sh <node ip> <etcd authority>

      # Install necessary kernel modules
      sudo modprobe xt_set
      sudo modprobe ip6_tables
      sudo /home/core/calicoctl checksystem --fix

      # Start the Calico node. TODO: Use the --kubernetes flag when starting Calico node.
      sudo ETCD_AUTHORITY=$2 /home/core/calicoctl node --ip=$1 --kubernetes

coreos:
  update:
    reboot-strategy: off

  units:
    - name: cbr0.netdev 
      command: start
      content: |
        [NetDev]
        Name=cbr0
        Kind=bridge

    - name: cbr0.network
      command: start
      content: |
        [Match]
        Name=cbr0
         
        [Network]
        Address=<DOCKER_BRIDGE_IP>

    - name: get-kube-tools.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Downloads Kubernetes binaries 
        After=network-online.service

        [Service]
        EnvironmentFile=/etc/other-environment
        ExecStartPre=-/usr/bin/mkdir -p /home/core
        ExecStart=/home/core/kubernetes-download.sh
        RemainAfterExit=yes
        Type=oneshot

    - name: setup-network-environment.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Setup Network Environment
        Documentation=https://github.com/kelseyhightower/setup-network-environment
        Requires=network-online.target
        After=network-online.target

        [Service]
        ExecStartPre=-/usr/bin/mkdir -p /opt/bin
        ExecStartPre=/usr/bin/wget -N -P /opt/bin https://github.com/kelseyhightower/setup-network-environment/releases/download/v1.0.0/setup-network-environment
        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment
        ExecStart=/opt/bin/setup-network-environment
        RemainAfterExit=yes
        Type=oneshot

    - name: calico-node.service
      runtime: true
      command: start
      content: |
        [Unit]
        Description=Start Calico on this node
        Requires=docker.service
        After=docker.service

        [Service]
        EnvironmentFile=/etc/network-environment
        EnvironmentFile=/etc/other-environment
        User=root
        PermissionsStartOnly=true
        ExecStartPre=-/usr/bin/wget -N -P "/home/core" "https://github.com/Metaswitch/calico-docker/releases/download/v0.5.1/calicoctl"
        ExecStartPre=-/usr/bin/chmod +x /home/core/calicoctl
        ExecStart=/home/core/calico-node.sh $DEFAULT_IPV4 $ETCD_AUTHORITY
        RemainAfterExit=yes
        Type=oneshot

    - name: kube-proxy.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=setup-network-environment.service
        After=setup-network-environment.service

        [Service]
        EnvironmentFile=/etc/network-environment
        EnvironmentFile=/etc/other-environment
        ExecStart=/home/core/kube-proxy --master=http://${KUBERNETES_MASTER}:8080 --logtostderr=true
        Restart=always
        RestartSec=10

    - name: kube-kubelet.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=setup-network-environment.service 
        After=setup-network-environment.service calico-node.service

        [Service]
        EnvironmentFile=/etc/network-environment
        EnvironmentFile=/etc/other-environment
        ExecStart=/home/core/kubelet \
        --v=5 \
        --address=0.0.0.0 \
        --port=10250 \
        --hostname_override=${DEFAULT_IPV4} \
        --api_servers=${KUBERNETES_MASTER}:8080 \
        --healthz_bind_address=0.0.0.0 \
        --healthz_port=10248 \
        --network_plugin=calico \
        --network_plugin_dir=/etc/kubelet-plugins \
        --logtostderr=true
        Restart=always
        RestartSec=10

    - name: docker.service
      command: start
      content: |
        [Unit]
        Description=Docker Application Container Engine
        Documentation=http://docs.docker.com
        After=docker.socket early-docker.target network.target setup-network-environment.service
        Requires=docker.socket early-docker.target setup-network-environment.service
  
        [Service]
        Environment=TMPDIR=/var/tmp
        MountFlags=slave
        LimitNOFILE=1048576
        LimitNPROC=1048576
        ExecStart=/usr/lib/coreos/dockerd --daemon --host=fd:// --bridge=cbr0 --iptables=false --ip-masq=false
  
        [Install]
        WantedBy=multi-user.target
